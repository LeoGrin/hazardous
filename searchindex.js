Search.setIndex({"docnames": ["api", "auto_examples/index", "auto_examples/plot_marginal_cumulative_incidence_estimation", "auto_examples/sg_execution_times", "downloading_seer", "generated/hazardous.GradientBoostingIncidence", "generated/hazardous.IPCWEstimator", "generated/hazardous.data.load_seer", "generated/hazardous.data.make_synthetic_competing_weibull", "generated/hazardous.metrics.brier_score_incidence", "generated/hazardous.metrics.brier_score_survival", "generated/hazardous.metrics.integrated_brier_score_incidence", "generated/hazardous.metrics.integrated_brier_score_survival", "index", "sg_execution_times"], "filenames": ["api.rst", "auto_examples/index.rst", "auto_examples/plot_marginal_cumulative_incidence_estimation.rst", "auto_examples/sg_execution_times.rst", "downloading_seer.rst", "generated/hazardous.GradientBoostingIncidence.rst", "generated/hazardous.IPCWEstimator.rst", "generated/hazardous.data.load_seer.rst", "generated/hazardous.data.make_synthetic_competing_weibull.rst", "generated/hazardous.metrics.brier_score_incidence.rst", "generated/hazardous.metrics.brier_score_survival.rst", "generated/hazardous.metrics.integrated_brier_score_incidence.rst", "generated/hazardous.metrics.integrated_brier_score_survival.rst", "index.rst", "sg_execution_times.rst"], "titles": ["API", "Example gallery", "Estimating marginal cumulative incidence functions", "Computation times", "How to get the SEER dataset", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">hazardous</span></code>.GradientBoostingIncidence", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">hazardous</span></code>.IPCWEstimator", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">hazardous.data</span></code>.load_seer", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">hazardous.data</span></code>.make_synthetic_competing_weibull", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">hazardous.metrics</span></code>.brier_score_incidence", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">hazardous.metrics</span></code>.brier_score_survival", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">hazardous.metrics</span></code>.integrated_brier_score_incidence", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">hazardous.metrics</span></code>.integrated_brier_score_survival", "H\u039bZ\u039bRDOUS", "Computation times"], "terms": {"thi": [0, 2, 4, 5, 6, 7, 9, 10, 11, 12, 13], "page": [0, 5, 6], "list": [0, 7], "all": [0, 1, 2, 5, 7, 9, 11, 14], "public": 0, "function": [0, 1, 3, 5, 6, 10, 12, 14], "class": [0, 5, 6], "hazard": [0, 1, 2, 4, 13], "packag": [0, 13], "below": [1, 4], "i": [1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13], "how": [1, 2, 5, 6, 13], "us": [1, 2, 4, 5, 6, 7, 9, 10, 11, 12], "predict": [1, 2, 5, 6, 9, 10, 11, 12, 13], "compet": [1, 2, 5, 7, 8, 9, 11, 13], "risk": [1, 4, 5, 8, 9, 11, 13], "analysi": [1, 4, 5, 6, 9, 11, 13], "problem": 1, "estim": [1, 3, 5, 6, 9, 10, 11, 12, 13, 14], "margin": [1, 3, 14], "cumul": [1, 3, 5, 9, 11, 13, 14], "incid": [1, 3, 5, 9, 11, 13, 14], "download": [1, 2, 4], "python": [1, 2, 13], "sourc": [1, 2], "code": [1, 2, 7], "auto_examples_python": 1, "zip": [1, 2], "jupyt": [1, 2], "notebook": [1, 2], "auto_examples_jupyt": 1, "gener": [1, 2, 5, 8, 9, 10, 11, 12], "sphinx": [1, 2], "go": [2, 4], "end": 2, "full": 2, "exampl": [2, 3, 5, 6, 13, 14], "demonstr": 2, "gradientboostingincid": 2, "compar": [2, 5], "result": [2, 5, 7, 8], "aalen": 2, "johansen": 2, "theoret": 2, "curv": [2, 5], "synthet": [2, 8], "here": 2, "take": 2, "minimum": 2, "time": [2, 5, 6, 8, 9, 10, 11, 12, 13], "sampl": [2, 5, 8], "from": [2, 3, 8, 14], "three": 2, "weibul": [2, 8], "distribut": [2, 8, 9], "fix": 2, "paramet": [2, 5, 6, 7, 8, 9, 10, 11, 12, 13], "without": [2, 13], "ani": [2, 5, 6, 9, 10, 11, 12], "condit": [2, 5], "covari": [2, 9, 10, 11, 12, 13], "In": [2, 5, 9, 11], "case": 2, "expect": [2, 5, 7, 9, 10, 11, 12], "unbias": 2, "empir": 2, "confirm": [2, 4], "The": [2, 5, 6, 7, 8, 9, 10, 11, 12, 13], "other": [2, 5, 7, 9, 11], "hand": 2, "least": 2, "one": [2, 5, 7, 8, 9, 11], "we": [2, 5, 8, 9, 10, 11, 12], "dummi": 2, "constant": [2, 6], "ar": [2, 5, 6, 7, 8, 9, 10, 11, 12], "interest": [2, 5, 7], "discrimin": 2, "power": 2, "none": [2, 5, 8], "construct": [2, 6], "sinc": 2, "do": [2, 5], "have": [2, 5, 6], "access": [2, 4], "inform": [2, 5, 6], "instead": [2, 5, 8], "studi": [2, 9, 10, 11, 12], "its": [2, 5, 6, 7, 8], "calibr": 2, "abil": 2, "approxim": 2, "recov": 2, "an": [2, 5, 6, 7, 9, 11], "each": [2, 5, 6, 8], "event": [2, 5, 6, 7, 8, 9, 10, 11, 12, 13], "also": [2, 5, 6, 7, 13], "highlight": 2, "noisi": 2, "which": [2, 6, 9, 10, 11, 12], "smooth": 2, "even": 2, "monoton": [2, 5], "increas": [2, 5, 6], "known": [2, 5], "limit": 2, "attempt": 2, "enforc": 2, "train": [2, 5, 10], "typic": [2, 5], "introduc": [2, 6, 9, 11], "sever": 2, "over": [2, 5, 12], "bia": [2, 6, 9, 10, 11, 12], "larg": [2, 5], "horizon": [2, 5], "import": 2, "perf_count": 2, "numpi": 2, "np": [2, 5, 6, 9, 10], "scipi": 2, "stat": [2, 4], "weibull_min": 2, "sklearn": [2, 5], "base": [2, 5, 9, 11, 13], "clone": 2, "panda": [2, 7], "pd": 2, "matplotlib": 2, "pyplot": 2, "plt": 2, "lifelin": 2, "aalenjohansenfitt": 2, "rng": 2, "random": [2, 5], "default_rng": 2, "0": [2, 3, 5, 6, 7, 8, 9, 10, 11, 14], "n_sampl": [2, 5, 7, 8, 9, 10, 11, 12], "3_000": 2, "non": [2, 9, 11], "becaus": [2, 5], "scikit": [2, 5, 13], "learn": [2, 5, 13], "featur": [2, 5, 7, 8, 9, 10], "x_dummi": 2, "zero": [2, 9, 11], "shape": [2, 5, 6, 7, 8, 9, 10, 11, 12], "1": [2, 3, 5, 6, 8, 9, 10, 11, 12, 14], "dtype": 2, "float32": 2, "base_scal": [2, 8], "1_000": 2, "some": [2, 5], "arbitrari": 2, "unit": 2, "event_id": 2, "scale": [2, 8], "10": [2, 5, 8, 9], "5": [2, 5, 8], "2": [2, 5, 7, 8, 9, 10, 11, 12], "3": [2, 5, 8], "event_tim": 2, "concaten": [2, 5], "rv": 2, "dist": 2, "size": 2, "random_st": [2, 5, 8], "reshap": 2, "axi": 2, "first_event_idx": 2, "argmin": 2, "y_uncensor": 2, "datafram": [2, 6, 7, 8, 9, 10, 11, 12], "dict": [2, 5, 6], "reserv": 2, "marker": [2, 7, 9, 11], "durat": [2, 5, 6, 7, 8, 9, 10, 11, 12], "arang": 2, "value_count": 2, "sort_index": 2, "t_max": 2, "max": [2, 11, 12], "know": 2, "true": [2, 5, 6, 7], "can": [2, 4, 5, 6], "comput": [2, 4, 5, 6, 9, 10, 11, 12], "integr": [2, 5, 9, 10, 11, 12], "probabl": [2, 5, 6, 9, 10, 11, 12, 13], "experienc": 2, "befor": [2, 4], "t": [2, 5, 6, 9, 10, 11, 12], "given": [2, 5, 6, 8], "subject": [2, 13], "ha": [2, 5, 8, 9, 10, 11, 12], "follow": [2, 7], "def": 2, "weibull_hazard": 2, "ignored_kwarg": 2, "plug": 2, "finit": 2, "valu": [2, 5, 6, 7, 8, 9, 10, 11, 12], "fraction": [2, 8], "undefin": 2, "xxx": 2, "doe": [2, 5], "seem": 2, "correct": [2, 6], "practic": [2, 5], "make": [2, 5], "possibl": [2, 5, 6], "wai": 2, "match": [2, 5], "errstat": 2, "divid": 2, "ignor": [2, 5], "return": [2, 5, 6, 7, 8, 9, 10, 11, 12], "where": [2, 5, 9, 10], "note": [2, 4, 5, 6, 7, 9, 10, 11, 12], "independ": [2, 5, 9, 10, 11, 12], "them": 2, "refer": [2, 4, 5, 9, 10, 11, 12], "check": [2, 5, 6], "two": [2, 7], "calculate_vari": 2, "5_000": 2, "aj": 2, "seed": 2, "gb_incid": 2, "learning_r": [2, 5], "03": 2, "n_iter": [2, 5], "100": [2, 5], "max_leaf_nod": [2, 5], "hard_zero_fract": [2, 5], "min_samples_leaf": [2, 5], "50": [2, 5], "loss": [2, 5], "ib": [2, 5, 11, 12], "show_progressbar": [2, 5], "fals": [2, 5, 7, 8], "let": 2, "": [2, 5, 6, 7, 10], "now": 2, "plot": 2, "against": 2, "plot_cumulative_incidence_funct": 2, "y": [2, 5, 6], "_": [2, 11, 12], "ax": 2, "subplot": 2, "figsiz": 2, "12": 2, "4": [2, 8], "ncol": 2, "len": 2, "sharei": 2, "coars": 2, "grid": 2, "coarse_timegrid": 2, "linspac": 2, "num": 2, "fine": 2, "grain": 2, "error": [2, 5], "accumul": 2, "quit": 2, "quickli": 2, "resolut": 2, "too": 2, "especi": [2, 5], "tic": 2, "fine_time_grid": 2, "10_000_000": 2, "dt": 2, "diff": 2, "all_hazard": 2, "stack": 2, "any_event_hazard": 2, "sum": [2, 5], "any_event_surviv": 2, "exp": 2, "cumsum": 2, "print": 2, "surviv": [2, 5, 6, 7, 9, 10, 11, 12, 13], "f": [2, 5, 9], "3f": 2, "censoring_fract": 2, "mean": [2, 5, 7, 8], "suptitl": 2, "caus": [2, 5, 7, 9, 11], "specif": [2, 5, 11], "hazards_i": 2, "enumer": 2, "theoretical_cif": 2, "downsampling_r": 2, "linestyl": 2, "dash": 2, "label": [2, 7], "set_param": [2, 5, 6], "event_of_interest": [2, 5, 9, 11], "fit": [2, 5, 6, 9, 11], "gb": 2, "cif_pr": 2, "predict_cumulative_incid": 2, "set": [2, 5, 6, 7, 8, 9, 10, 11], "titl": 2, "legend": 2, "loc": 2, "lower": 2, "right": [2, 5, 6, 9, 10, 11, 12, 13], "els": 2, "remov": 2, "597": 2, "657": 2, "458": 2, "084": 2, "220": 2, "314": 2, "444": 2, "082": 2, "242": 2, "319": 2, "431": 2, "303": 2, "add": 2, "control": [2, 7], "amount": 2, "bound": 2, "censoring_tim": 2, "y_censor": 2, "1427": 2, "703": 2, "733": 2, "137": 2, "name": [2, 5, 6, 7], "count": 2, "int64": 2, "575": 2, "635": 2, "448": 2, "306": 2, "409": 2, "451": 2, "258": 2, "335": 2, "420": 2, "086": 2, "210": 2, "both": [2, 5], "appear": 2, "By": [2, 6], "adjust": [2, 10, 12], "hyper": [2, 5, 13], "notabl": 2, "rate": [2, 13], "number": [2, 5], "boost": [2, 5], "iter": [2, 5], "leaf": 2, "node": 2, "somewhat": 2, "like": [2, 5, 9, 10, 11, 12], "kind": 2, "post": 2, "process": 2, "could": 2, "benefici": 2, "mayb": 2, "cost": 2, "left": [2, 5], "futur": 2, "work": [2, 5, 6], "altern": 2, "try": 2, "enabl": 2, "constraint": 2, "howev": 2, "often": 2, "final": 2, "again": 2, "model": [2, 5, 6, 9, 10, 11, 12, 13], "monotonic_gb_incid": 2, "monotonic_incid": [2, 5], "at_training_tim": [2, 5], "576": 2, "636": 2, "435": 2, "144": 2, "443": 2, "143": 2, "424": 2, "083": 2, "inde": 2, "smaller": 2, "significantli": 2, "bias": [2, 5, 9, 10, 11, 12], "particular": 2, "get": [2, 5, 6, 13], "flatter": 2, "effect": [2, 5, 13], "diminish": 2, "larger": [2, 6, 8], "epistem": 2, "uncertainti": 2, "total": [2, 3, 14], "run": [2, 5], "script": 2, "minut": 2, "39": [2, 3, 14], "757": [2, 3, 14], "second": [2, 5], "plot_marginal_cumulative_incidence_estim": [2, 3, 14], "ipynb": 2, "py": [2, 3, 14], "galleri": [2, 13, 14], "00": [3, 14], "execut": [3, 14], "file": [3, 4, 7, 14], "auto_exampl": 3, "mem": [3, 14], "mb": [3, 14], "cancer": 4, "statist": [4, 13], "u": [4, 11, 12], "competit": 4, "quick": 4, "guid": [4, 5, 6], "obtain": [4, 5], "you": [4, 5], "need": [4, 7], "window": 4, "emul": 4, "head": 4, "data": [4, 5, 9, 10, 11, 12, 13], "webpag": 4, "enter": 4, "your": 4, "email": 4, "address": 4, "click": 4, "research": 4, "request": [4, 5], "fill": 4, "form": [4, 5, 6], "wait": 4, "few": 4, "dai": 4, "after": 4, "receiv": 4, "softwar": 4, "open": 4, "sign": 4, "credendi": 4, "seerstat": 4, "sl": 4, "should": [4, 5, 7, 9, 11, 13], "txt": [4, 7], "load": [4, 7], "load_seer": 4, "usag": [5, 6], "bottom": [5, 6], "05": 5, "max_depth": 5, "31": 5, "n_time_grid_step": 5, "time_horizon": 5, "cif": 5, "gbdt": 5, "want": 5, "sai": 5, "hat": [5, 9, 10], "_k": [5, 9, 11], "approx": [5, 9], "mathbb": [5, 9, 10], "p": [5, 9], "leq": [5, 9, 10], "e": [5, 8, 9, 10, 11, 12], "k": [5, 9], "variabl": 5, "uncensor": [5, 6, 9, 10], "first": [5, 8], "domain": 5, "type": [5, 7, 8, 9, 10, 11, 12], "One": 5, "sum_": [5, 9, 10], "equival": [5, 9, 11], "onc": 5, "collaps": [5, 7, 9, 10, 11, 12], "event_of_intercept": 5, "formul": 5, "intern": 5, "reli": 5, "histogram": 5, "gradient": 5, "classifi": 5, "regressor": 5, "implement": [5, 13], "minim": 5, "stochast": 5, "proper": [5, 9, 10, 11, 12], "score": [5, 6, 9, 10, 11, 12], "rule": [5, 9, 10, 11, 12], "brier": [5, 6, 9, 10, 11, 12], "binari": [5, 6, 9, 10, 11], "cross": [5, 13], "entropi": 5, "kth": [5, 9, 11], "failur": 5, "defin": [5, 7], "equat": 5, "14": 5, "kretowska2018": [5, 9, 11], "under": [5, 13], "hood": 5, "randomli": 5, "extra": 5, "input": [5, 6], "column": [5, 6, 7, 9, 10, 11, 12, 13], "underli": 5, "hgb": 5, "classif": [5, 9, 10, 11, 12], "At": 5, "new": 5, "tree": [5, 9, 11], "copi": 5, "origin": [5, 7], "matrix": 5, "x": [5, 9, 10], "augment": 5, "int": [5, 9, 11, 12], "default": [5, 6, 7, 9, 11], "when": [5, 6, 9, 10, 11, 12], "pass": 5, "integ": [5, 7, 9, 11], "observ": [5, 6, 12], "y_train": [5, 9, 10, 11, 12], "alwai": [5, 6], "repres": 5, "censor": [5, 6, 7, 8, 9, 10, 11, 12, 13], "cannot": 5, "valid": [5, 13], "togeth": [5, 9, 11], "complement": 5, "singl": [5, 9, 10, 11, 12], "inll": 5, "object": [5, 6, 7, 13], "yield": 5, "histgradientboostedregressor": 5, "squared_error": 5, "As": 5, "guarante": 5, "regress": 5, "belong": 5, "clip": 5, "rang": [5, 8, 12], "neg": [5, 6], "log": 5, "likelihood": 5, "histgradientboostedclassifi": 5, "log_loss": 5, "float": [5, 11, 12], "A": [5, 6, 8], "t_horizon": 5, "treat": [5, 7], "probabilist": 5, "\ud835\udd3c": 5, "categor": 5, "specifi": 5, "predict_proba": 5, "method": [5, 6, 13], "provid": [5, 13], "realiz": 5, "str": [5, 7], "whether": 5, "constrain": 5, "respect": [5, 10, 12], "If": [5, 6, 7, 10, 12], "oscil": 5, "around": 5, "todo": [5, 7], "at_prediction_tim": 5, "option": [5, 7], "isoton": 5, "lead": 5, "overestim": 5, "longest": 5, "deep": [5, 6], "remain": [5, 6, 10], "those": 5, "graf1999": [5, 9, 10, 11, 12], "graf": [5, 9, 10, 11, 12], "c": [5, 9, 10, 11, 12], "schmoor": [5, 9, 10, 11, 12], "w": [5, 9, 10, 11, 12], "sauerbrei": [5, 9, 10, 11, 12], "m": [5, 9, 10, 11, 12], "schumach": [5, 9, 10, 11, 12], "assess": [5, 9, 10, 11, 12], "comparison": [5, 9, 10, 11, 12], "prognost": [5, 9, 10, 11, 12], "scheme": [5, 9, 10, 11, 12], "1999": [5, 9, 10, 11, 12], "kretowska": [5, 9, 11], "2018": [5, 9, 11], "gerds2006": [5, 9, 10, 11, 12], "gerd": [5, 9, 10, 11, 12], "consist": [5, 6, 9, 10, 11, 12], "2006": [5, 9, 10, 11, 12], "edwards2016": [5, 9], "j": [5, 9], "edward": [5, 9], "l": [5, 9], "hester": [5, 9], "gokhal": [5, 9], "lesko": [5, 9], "methodolog": [5, 9], "issu": [5, 9], "pharmacoepidemiologi": [5, 9], "2016": [5, 9], "doi": [5, 9], "1007": [5, 9], "s40471": [5, 9], "016": [5, 9], "0089": [5, 9], "get_metadata_rout": [5, 6], "metadata": [5, 6], "rout": [5, 6], "pleas": [5, 6], "user": [5, 6], "mechan": [5, 6], "metadatarequest": [5, 6], "encapsul": [5, 6], "get_param": [5, 6], "bool": [5, 6, 7], "contain": [5, 6], "subobject": [5, 6], "param": [5, 6], "map": [5, 6], "see": [5, 9, 10, 11, 12], "docstr": 5, "more": [5, 10, 12], "detail": 5, "2d": 5, "arrai": [5, 6, 9, 10, 11, 12], "hold": [5, 7, 10, 12], "therefor": [5, 6], "individu": [5, 8], "free": [5, 6, 7], "intuit": 5, "predict_quantil": 5, "quantil": 5, "median": 5, "inf": 5, "reach": 5, "maximum": 5, "predict_survival_funct": 5, "warn": 5, "metric": [5, 6, 13], "onli": [5, 6, 10, 12], "sens": 5, "so": [5, 6], "higher": 5, "better": 5, "convent": 5, "select": 5, "util": 5, "gridsearchcv": 5, "randomizedsearchcv": 5, "constructor": 5, "determin": 5, "n_featur": [5, 7], "kei": 5, "target": [5, 6, 7, 8, 9, 10, 11, 12], "boolean": 5, "indic": [5, 6, 9, 10, 11], "wa": [5, 9, 11], "set_fit_request": 5, "unchang": 5, "relev": 5, "enable_metadata_rout": 5, "set_config": 5, "meta": 5, "rais": 5, "alia": 5, "metadata_rout": 5, "retain": 5, "exist": 5, "allow": 5, "chang": [5, 13], "version": 5, "sub": 5, "g": [5, 8, 9, 10], "insid": 5, "pipelin": [5, 6, 13], "otherwis": 5, "self": [5, 6], "updat": [5, 6], "simpl": [5, 6], "well": [5, 6], "nest": [5, 6], "latter": [5, 6], "compon": [5, 6, 13], "__": [5, 6], "instanc": [5, 6], "set_predict_proba_request": 5, "invers": [6, 13], "weight": [6, 9, 10, 11, 12, 13], "ipcw": [6, 9, 10, 11, 12], "kaplan": [6, 9, 10], "meier": [6, 9, 10], "occurr": 6, "evalu": [6, 10, 12], "concord": 6, "index": 6, "bit": 6, "mislead": 6, "being": 6, "equal": [6, 8], "uniformli": [6, 8], "extrapol": 6, "last": 6, "beyond": 6, "compute_ipcw_at": 6, "linearli": 6, "interpol": 6, "ndarrai": [6, 9, 10], "n_time": [6, 9, 10, 11, 12], "store": 6, "dictionnari": [6, 9, 10, 11, 12], "input_path": 7, "event_column_nam": 7, "cod": 7, "site": 7, "recod": 7, "duration_column_nam": 7, "month": 7, "events_of_interest": 7, "breast": 7, "diseas": 7, "heart": 7, "censoring_label": 7, "aliv": 7, "other_event_nam": 7, "survtrace_preprocess": 7, "return_x_i": [7, 8], "seer": [7, 13], "dataset": [7, 8, 13], "appli": [7, 10, 12], "same": [7, 10, 12], "preprocess": 7, "done": 7, "survtrac": 7, "file_path": 7, "path": 7, "tupl": 7, "preserv": 7, "specifici": 7, "extract": 7, "dedic": [7, 13], "typl": 7, "death": 7, "interpret": 7, "whe": 7, "other_ev": 7, "step": 7, "ensur": 7, "reproduc": 7, "paper": 7, "fulli": 7, "replic": 7, "would": 7, "bunch_dataset": 7, "bunch": 7, "attribut": 7, "identifi": [7, 8], "posit": 7, "event_label": 7, "numer": 7, "express": 7, "document": 7, "what": 7, "t0": 7, "original_data": 7, "29": 7, "n_event": 8, "3000": 8, "1000": 8, "feature_round": 8, "target_round": 8, "shape_rang": 8, "9": 8, "scale_rang": 8, "20": 8, "censoring_relative_scal": 8, "For": 8, "pair": 8, "differ": 8, "Then": 8, "correspond": 8, "parametr": 8, "shortest": 8, "kept": 8, "disabl": 8, "small": 8, "y_test": [9, 10, 11, 12], "y_pred": [9, 10, 11, 12], "depend": [9, 10, 11, 12], "mathrm": [9, 10, 11, 12], "b": [9, 10, 11, 12], "frac": [9, 10, 11, 12], "n": [9, 10], "omega": 9, "_i": [9, 10], "t_i": 9, "delta_i": [9, 10], "mathbf": [9, 10], "up": [9, 10], "point": [9, 10], "vector": [9, 10], "e_i": 9, "weigth": 9, "neq": 9, "context": 9, "extend": [9, 11, 13], "assum": [9, 10, 11, 12], "between": [9, 10, 11, 12], "assumpt": [9, 10, 11, 12], "violat": [9, 10, 11, 12], "anymor": [9, 10, 11, 12], "record": [9, 10, 11, 12], "ground": [9, 10, 11, 12], "truth": [9, 10, 11, 12], "survival_prob": [9, 11], "been": [9, 10, 11, 12], "consid": [9, 11], "except": [9, 11], "brier_scor": [9, 10], "integrated_brier_score_incid": 9, "y_i": 10, "land": 10, "negat": 10, "than": [10, 12, 13], "thei": [10, 12, 13], "automat": [10, 12], "remark": [10, 12], "integrated_brier_score_surviv": 10, "t_": [11, 12], "min": [11, 12], "du": [11, 12], "brier_score_incid": 11, "brier_score_surviv": 12, "librari": 13, "presenc": 13, "build": 13, "top": 13, "api": 13, "offer": 13, "interoper": 13, "tool": 13, "transform": 13, "seach": 13, "etc": 13, "neural": 13, "network": 13, "leverag": 13, "pytorch": 13, "skorch": 13, "put": 13, "focu": 13, "accuraci": 13, "rather": 13, "infer": 13, "quantifi": 13, "associ": 13, "causal": 13, "instantan": 13, "scope": 13, "licens": 13, "mit": 13, "github": 13, "repositori": 13, "soda": 13, "inria": 13, "changelog": 13, "statu": 13, "develop": 13, "notic": 13}, "objects": {"hazardous": [[5, 0, 1, "", "GradientBoostingIncidence"], [6, 0, 1, "", "IPCWEstimator"]], "hazardous.GradientBoostingIncidence": [[5, 1, 1, "", "get_metadata_routing"], [5, 1, 1, "", "get_params"], [5, 1, 1, "", "predict_proba"], [5, 1, 1, "", "predict_quantile"], [5, 1, 1, "", "predict_survival_function"], [5, 1, 1, "", "score"], [5, 1, 1, "", "set_fit_request"], [5, 1, 1, "", "set_params"], [5, 1, 1, "", "set_predict_proba_request"]], "hazardous.IPCWEstimator": [[6, 1, 1, "", "compute_ipcw_at"], [6, 1, 1, "", "fit"], [6, 1, 1, "", "get_metadata_routing"], [6, 1, 1, "", "get_params"], [6, 1, 1, "", "set_params"]], "hazardous.data": [[7, 2, 1, "", "load_seer"], [8, 2, 1, "", "make_synthetic_competing_weibull"]], "hazardous.metrics": [[9, 2, 1, "", "brier_score_incidence"], [10, 2, 1, "", "brier_score_survival"], [11, 2, 1, "", "integrated_brier_score_incidence"], [12, 2, 1, "", "integrated_brier_score_survival"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:function"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "function", "Python function"]}, "titleterms": {"api": 0, "estim": [0, 2], "metric": [0, 9, 10, 11, 12], "dataset": [0, 4], "invers": 0, "probabl": 0, "censor": [0, 2], "weight": 0, "exampl": 1, "galleri": 1, "margin": 2, "cumul": 2, "incid": 2, "function": 2, "cif": 2, "uncensor": 2, "data": [2, 7, 8], "comput": [3, 14], "time": [3, 14], "how": 4, "get": 4, "seer": 4, "hazard": [5, 6, 7, 8, 9, 10, 11, 12], "gradientboostingincid": 5, "ipcwestim": 6, "load_seer": 7, "make_synthetic_competing_weibul": 8, "brier_score_incid": 9, "brier_score_surviv": 10, "integrated_brier_score_incid": 11, "integrated_brier_score_surviv": 12, "h\u03bbz\u03bbrdou": 13, "content": 13}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx": 60}, "alltitles": {"API": [[0, "api"]], "Estimators": [[0, "estimators"]], "Metrics": [[0, "metrics"]], "Datasets": [[0, "datasets"]], "Inverse Probability Censoring Weight": [[0, "inverse-probability-censoring-weight"]], "Example gallery": [[1, "example-gallery"]], "Estimating marginal cumulative incidence functions": [[2, "estimating-marginal-cumulative-incidence-functions"]], "CIFs estimated on uncensored data": [[2, "cifs-estimated-on-uncensored-data"]], "CIFs estimated on censored data": [[2, "cifs-estimated-on-censored-data"]], "Computation times": [[3, "computation-times"], [14, "computation-times"]], "How to get the SEER dataset": [[4, "how-to-get-the-seer-dataset"]], "hazardous.GradientBoostingIncidence": [[5, "hazardous-gradientboostingincidence"]], "hazardous.IPCWEstimator": [[6, "hazardous-ipcwestimator"]], "hazardous.data.load_seer": [[7, "hazardous-data-load-seer"]], "hazardous.data.make_synthetic_competing_weibull": [[8, "hazardous-data-make-synthetic-competing-weibull"]], "hazardous.metrics.brier_score_incidence": [[9, "hazardous-metrics-brier-score-incidence"]], "hazardous.metrics.brier_score_survival": [[10, "hazardous-metrics-brier-score-survival"]], "hazardous.metrics.integrated_brier_score_incidence": [[11, "hazardous-metrics-integrated-brier-score-incidence"]], "hazardous.metrics.integrated_brier_score_survival": [[12, "hazardous-metrics-integrated-brier-score-survival"]], "H\u039bZ\u039bRDOUS": [[13, "hzrdous"]], "Contents:": [[13, null]]}, "indexentries": {"gradientboostingincidence (class in hazardous)": [[5, "hazardous.GradientBoostingIncidence"]], "get_metadata_routing() (hazardous.gradientboostingincidence method)": [[5, "hazardous.GradientBoostingIncidence.get_metadata_routing"]], "get_params() (hazardous.gradientboostingincidence method)": [[5, "hazardous.GradientBoostingIncidence.get_params"]], "predict_proba() (hazardous.gradientboostingincidence method)": [[5, "hazardous.GradientBoostingIncidence.predict_proba"]], "predict_quantile() (hazardous.gradientboostingincidence method)": [[5, "hazardous.GradientBoostingIncidence.predict_quantile"]], "predict_survival_function() (hazardous.gradientboostingincidence method)": [[5, "hazardous.GradientBoostingIncidence.predict_survival_function"]], "score() (hazardous.gradientboostingincidence method)": [[5, "hazardous.GradientBoostingIncidence.score"]], "set_fit_request() (hazardous.gradientboostingincidence method)": [[5, "hazardous.GradientBoostingIncidence.set_fit_request"]], "set_params() (hazardous.gradientboostingincidence method)": [[5, "hazardous.GradientBoostingIncidence.set_params"]], "set_predict_proba_request() (hazardous.gradientboostingincidence method)": [[5, "hazardous.GradientBoostingIncidence.set_predict_proba_request"]], "ipcwestimator (class in hazardous)": [[6, "hazardous.IPCWEstimator"]], "compute_ipcw_at() (hazardous.ipcwestimator method)": [[6, "hazardous.IPCWEstimator.compute_ipcw_at"]], "fit() (hazardous.ipcwestimator method)": [[6, "hazardous.IPCWEstimator.fit"]], "get_metadata_routing() (hazardous.ipcwestimator method)": [[6, "hazardous.IPCWEstimator.get_metadata_routing"]], "get_params() (hazardous.ipcwestimator method)": [[6, "hazardous.IPCWEstimator.get_params"]], "set_params() (hazardous.ipcwestimator method)": [[6, "hazardous.IPCWEstimator.set_params"]], "load_seer() (in module hazardous.data)": [[7, "hazardous.data.load_seer"]], "make_synthetic_competing_weibull() (in module hazardous.data)": [[8, "hazardous.data.make_synthetic_competing_weibull"]], "brier_score_incidence() (in module hazardous.metrics)": [[9, "hazardous.metrics.brier_score_incidence"]], "brier_score_survival() (in module hazardous.metrics)": [[10, "hazardous.metrics.brier_score_survival"]], "integrated_brier_score_incidence() (in module hazardous.metrics)": [[11, "hazardous.metrics.integrated_brier_score_incidence"]], "integrated_brier_score_survival() (in module hazardous.metrics)": [[12, "hazardous.metrics.integrated_brier_score_survival"]]}})